1 方法会生成一个新数组


<1> [0,1,2,3,4,5].slice(0,1)    (截取开始的索引,截取结束的索引)
	以数组的形式返回: 截取的元素,
	
	
<2> [0,1,2,3,4,5].join(',')
	以字符串的形式返回: 根据参数拼接的新字符串,
	
	
<3> concat用 [...arr] 代替


<4> Array.from(需要装换的参数,将两类对象转化数组后再遍历成员计算的函数)  
	第一个参数的范围:1 有length属性的对象(类数组)  2 有遍历器接口的对象(Set和Map),其实可以用[...set]替代Array.from
	以数组的形式返回: 将某些类型,转化为数组,
	举例:
	let namesSet = new Set([1, 2])
	var res = Array.from(namesSet ,x=>x*x)
	
	
<5>
	Array.of()和Array差不多, 区别在于
	Array.of()的参数是一个的时候,是代表数组的长度
	